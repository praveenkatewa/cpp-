1>Scenario 1: Access Control
You are developing a simple login system. Write a C++ program that prompts the user for a username and password. If both the username and password match predefined values, grant access. Otherwise, deny access.
#include <bits/stdc++.h>
using namespace std;
int main() {
    string username, password;
    string correctUsername = "praveen";
    string correctPassword = "pass";

  
    cout << "Enter username: ";
    cin >> username;
    cout << "Enter password: ";
    cin >> password;

       if (username == correctUsername && password == correctPassword) {
        cout << "Access granted! Welcome, " << username << "!\n";
    } else {
        cout << "Access denied! Incorrect username or password.\n";
    }

    return 0;
}
============================================================================================
Scenario 2: Membership Eligibility
Create a program that checks if a user is eligible for a premium membership based on age and
subscription status. If the user is at least 18 years old and has a valid subscription, provide access;otherwise, deny access.

#include <bits/stdc++.h>
using namespace std;
int main() {
    int age;
    bool hasSubscription;
    cout << "Enter your age: ";
    cin >> age;
    cout << "Do you have a subscription??: ";
    cin >> hasSubscription;

    if (age >= 18 && hasSubscription) {
        cout << "Congratulations! You are eligible for premium membership.\n";
    } else {
        cout << "Sorry, you are not eligible for premium membership.\n";
    }

    return 0;
}
===========================================================================================
Scenario 3: Grade Classification
Design a program that takes a student's numerical grade as input and outputs their correspondingletter grade. Use if-else statements to categorize the grades as 'A', 'B', 'C', 'D', or 'F'.
#include <bits/stdc++.h>
using namespace std;
int main() {
    int  number;
    cout << "Enter the number: ";
    cin >> number;

    if (number >= 90) {
        cout << " A";
    } else if (number >= 80) {
        cout << " B";
    } else if (number >= 70) {
        cout << " C";
    } else if (number >= 60) {
        cout << " D";
    } else {
        cout << " F";
    }

    return 0;
}
=========================================================================================
Scenario 4: Shipping Charges
Write a C++ program that calculates shipping charges based on the weight of a package. If the weight is less than or equal to 5 pounds, apply a flat rate; otherwise, charge an additional fee per pound for weights exceeding 5 pounds.
#include <bits/stdc++.h>
using namespace std;
int main () 
{
    double weight, flatRate, additionalFeePerPound, shippingCharges;
    cout<<"Enter the weight of the package in pounds: ";
    cin>>weight;

    if (weight <= 5) 
    {
        flatRate = 840.0;
        shippingCharges = flatRate;
    }
    else 
    {
        flatRate = 840.0;
        additionalFeePerPound = 168.0;
        shippingCharges = flatRate + additionalFeePerPound * (weight - 5);
    }
    cout<<"Shipping charges for the package weighing "<<weight <<" pounds: rupees " <<shippingCharges<<"\n";
        return 0;
     
}
==========================================================================================
Scenario 5: Discount Calculation
You are working for an e-commerce platform. Implement a program that calculates the total cost of an order after applying discounts. If the order amount is greater than $50 and the user is a premium member, provide a 10% discount; otherwise, provide a 5% discount.
#include <bits/stdc++.h>
using namespace std;


int main() {
    double orderAmount, totalCost;
    bool isPremiumMember;
    const double PREMIUM_DISCOUNT_RATE = 0.10; 
    const double REGULAR_DISCOUNT_RATE = 0.05; 

   
    cout << "Enter the order amount: ";
    cin >> orderAmount;
    cout << "Are you a premium member? : ";
    cin >> isPremiumMember;

   
    if (orderAmount > 50.0 && isPremiumMember) {
        totalCost = orderAmount * (1.0 - PREMIUM_DISCOUNT_RATE);
    } else {
        totalCost = orderAmount * (1.0 - REGULAR_DISCOUNT_RATE);
    }

    cout << "Total cost after applying the discount: " << totalCost << endl;

    return 0;
}
===========================================================================================
Scenario 6: Ticket Pricing
Develop a program that determines the price of a movie ticket based on the age of the user and the time of the movie. If the user is a child (age <= 12), provide a discount. If the movie is a matinee (before 5 PM), apply an additional discount.
#include <bits/stdc++.h>
using namespace std;


int main() {
    int age;
    double ticketPrice;
    bool isMatinee;
    const double CHILD_DISCOUNT = 0.5; 
    const double MATINEE_DISCOUNT = 0.2;

        cout << "Enter your age: ";
    cin >> age;
    cout << "Is it a matinee show? ";
    cin >> isMatinee;

       if (age <= 12) {
      
        ticketPrice = 8.0; 
        if (isMatinee) {
            ticketPrice *= (1.0 - CHILD_DISCOUNT); 
            ticketPrice *= (1.0 - MATINEE_DISCOUNT);
        } else {
            ticketPrice *= (1.0 - CHILD_DISCOUNT); 
        }
    } else {
        
        ticketPrice = 12.0; 
        if (isMatinee) {
            ticketPrice *= (1.0 - MATINEE_DISCOUNT);
        }
    }

   
    cout << "The ticket price is: " << ticketPrice << endl;

    return 0;
}
=========================================================================================
7. **Scenario 7: Authentication System**
Design a program for a secure system that requires two-factor authentication. The user needs to input both a valid username/password combination and a time-sensitive authentication code. Grant access only if both conditions are met.
#include <bits/stdc++.h>
using namespace std;
int main() {
    string username, password, authenticationCode;
    const string correctUsername = "user";
    const string correctPassword = "pass";
    const string correctCode = "123"; 
    
    cout << "Enter username: ";
    cin >> username;
    cout << "Enter password: ";
    cin >> password;

   
    if (username == correctUsername && password == correctPassword) {
        
        cout << "Enter authentication code: ";
        cin >> authenticationCode;

   
        if (authenticationCode == correctCode) {
            cout << " Welcome, " << username ;
        } else {
            cout << "Incorrect authentication code.";
        }
    } else {
        cout << "Access denied! Incorrect username or password.";
    }

    return 0;
}
===========================================================================================
8. **Scenario 8: Voting Eligibility**

Create a program that checks if a person is eligible to vote. The eligibility criteria include being at least 18 years old and not having a criminal record. Grant voting access only if both conditions are satisfied.
#include <bits/stdc++.h>
using namespace std;
int main() {
    int age;
    char hasCriminalRecord;

   
    cout << "Enter your age: ";
    cin >> age;
    cout << "Do you have a criminal record?: ";
    cin >> hasCriminalRecord;

    if (age >= 18 && hasCriminalRecord == 'N') {
        cout << "You are eligible to vote.";
    } else {
        cout << "You are not eligible to vote.";
    }

    return 0;
}
===========================================================================================
Scenario 9: Temperature Classification**
Write a program that classifies the temperature into different categories (cold, moderate, hot). Use relational operators to compare the temperature input and categorize it accordingly.
#include <bits/stdc++.h>
using namespace std;
int main () 
{
    int temperature;
    cout<<"Enter the temperature: \n";
    cin>>temperature;
    if (temperature < 10) 
    {
        cout << "Cold\n";
    } 
    else if(temperature >= 10 && temperature <= 35) 
    {
        cout << "Moderate\n";
    }
    else 
    {
        cout << "Hot\n";
    }
    return 0;
}
===========================================================================================
Scenario 10: Exam Pass/Fail**
Develop a program that determines whether a student passes or fails an exam based on the inputmarks. If the student scores 40% or more, consider it a pass; otherwise, mark it as a fail.
#include <bits/stdc++.h>
using namespace std;
int main () 
{
    double marks;
    cout << "Enter the marks you obtained in the exam: \n";
    cin >> marks;
    if (marks >= 40.0) 
    {
        cout<<"Congratulations! You are passed in the exam.\n";
    }
    else 
    {
        cout<<"Sorry, you are failed in the exam.\n";
    }
    return 0;
}
===========================================================================================
11. **Scenario 11: Library Fine Calculation**
Implement a program for a library that calculates the fine for overdue books. If a book is returned after the due date, charge a base fine. If it's returned more than a week late, apply an additional fee.
#include <bits/stdc++.h>
using namespace std;
int main() {
    int daysLate;
    double fine;
    const double BASE_FINE = 50; 
    const double ADDITIONAL_FEE = 100; 

   
    cout << "Enter the number of days the book is late: ";
    cin >> daysLate;

    
    if (daysLate <= 7) {
        fine = BASE_FINE;
    } else {
        fine = BASE_FINE + ADDITIONAL_FEE * (daysLate - 7);
    }

    cout  << fine << endl;

    return 0;
}
===========================================================================================
Scenario 12: Product Discount**
Design a program for an online store that applies different discounts based on the user's purchase history. If a user has made more than 5 purchases, offer a 15% discount; otherwise, provide a standard 10% discount.
#include <bits/stdc++.h>
using namespace std;
int main () 
{
    int numPurchases;
    cout<<"Enter the number of purchases: \n";
    cin>>numPurchases;
    double discount;
    if (numPurchases > 5) 
    {
        discount = 0.15; 
    }
    else
    {
        discount = 0.10;
    }
    cout<<"congrets!!You qualify for a " << (discount * 100) << "% discount." <<"\n";

    return 0;
}
===========================================================================================
Scenario 13: Event Invitation
Create a program for an exclusive event. Users are invited if they are either VIP guests or have purchased a premium ticket. Use the OR logical operator to check the conditions and grant access accordingly.

#include <bits/stdc++.h>
using namespace std;
int main () 
{
    bool isVipGuest, hasPremiumTicket;
    cout<<"Are you a VIP guest? (1 for yes, 0 for no): ";
    cin>>isVipGuest;

    cout<<"Do you have a premium ticket? (1 for yes, 0 for no): ";
    cin>>hasPremiumTicket;

    if (isVipGuest || hasPremiumTicket)
    {
        cout<<"You are invited to the exclusive event!\n";
    }
    else 
    {
        cout<<"Sorry, you are not invited to the event.\n";
    }
 ===========================================================================================
Scenario 14: Password Recovery
Design a simple password recovery system. Allow access if the user provides either the correctpassword or a valid recovery code. Ensure that users can gain access if either condition is satisfied.
#include <bits/stdc++.h>
using namespace std;
int main () 
{
    string password = "5467654", recoveryCode = "98765", userInput;
    cout<<"Enter your password or recovery code: ";
    cin>>userInput;

    if (userInput == password || userInput == recoveryCode) 
    {
        cout<<"Access granted! Welcome!\n";
    }
    else 
    {
        cout<<"Access denied! Invalid password or recovery code.\n";
    }
    return 0;
}